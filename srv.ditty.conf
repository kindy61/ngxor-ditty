lua_package_path '/usr/local/lib/lua/5.1/?.lua;;';
lua_package_cpath '/usr/local/lib/lua/5.1/?.so;;';

upstream db_tdwiki {
    drizzle_server 127.0.0.1 dbname=tdwiki
        password=xkk user=kk protocol=mysql;
    drizzle_keepalive max=20 overflow=ignore mode=single;
}

server {
    listen 80;
    server_name vi-i.net;

    error_log /home/kindy/git/ngxor-ditty/logs/error.log;
    access_log /home/kindy/git/ngxor-ditty/logs/access.log;

    set $doc_root /home/kindy/git/ngxor-ditty;

    root /dev/null;

    location = / {
        echo_exec /index.html;
    }
    location = /index.html {
        internal;
        root $doc_root;
    }
    location /static/ {
        root $doc_root;
    }

    location = /edit/t/~ {
        lua_need_request_body on;

        if ($request_method != 'POST') {
            rds_json_ret 1 'should be post';
            break;
        }

        set $sql '';

        set $a_id $arg_id;
        set_unescape_uri $a_title $arg_title;
        set $id_title "$a_id,$a_title";

        if ($id_title !~ '^\d+,[\w_\d]+$') {
            rds_json_ret 1 'pls give me id and title';
            break;
        }

        content_by_lua "
        local title = ngx.quote_sql_str(ngx.var.a_title)
        local body = ngx.quote_sql_str(ngx.var.request_body)
        local id = ngx.var.a_id

        ngx.var.sql = string.format([[
            insert into `tidd` (`id`, `title`, `body`)
                values (%d, %s, %s)
                on duplicate key update
                `title`=%s, `body`=%s]],
                id, title, body,
                title, body
                );

        local res = ngx.location.capture('/in-sql')
        if res.status == 0 or res.status == 200 then
            ngx.print(res.body or 'ok')
        else
            ngx.print('fail ' .. res.status)
        end
        ";
    }

    location = /view/t/~ {
        set $a_id $arg_id;

        if ($a_id !~ '^\d+$') {
            rds_json_ret 1 'pls give me an id';
            break;
        }

        drizzle_query "select `id`, `title`, `stime`, `ctime`, `public`, `body` 
            from `tidd` where `uid`=1 and `id`=$a_id limit 100";

        drizzle_buffer_size 4k;
        drizzle_pass db_tdwiki;
    }

    location = /view/t/recent {
        rds_json on;

        drizzle_query "select `id`, `title`, `body`, `ctime`, `stime`, `uid`
            from `tidd`
            order by ctime desc, id desc
            limit 10";

        drizzle_buffer_size 4k;
        drizzle_pass db_tdwiki;
    }
    location = /view/t/list {
        rds_json on;

        drizzle_query "select `id`, `title` from `tidd` limit 100";

        drizzle_buffer_size 4k;
        drizzle_pass db_tdwiki;
    }
    location /t-lua {
        internal;

        # MIME type determined by default_type:
        default_type 'text/plain';

        content_by_lua '
            local res = ngx.location.capture("/some_other_location")
            if res.status == 200 then
                ngx.print(res.body)
            end';
    }

    location @null {
        return 444;
    }



    location = /in-sql {
        rds_json on;

        if ($sql = "") {
            rds_json_ret 1 'missing sql';
            break;
        }

        drizzle_query $sql;

        drizzle_pass db_tdwiki;
    }
}
